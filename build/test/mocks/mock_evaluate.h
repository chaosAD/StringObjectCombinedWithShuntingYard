/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_EVALUATE_H
#define _MOCK_EVALUATE_H

#include "evaluate.h"
#include "CException.h"

void mock_evaluate_Init(void);
void mock_evaluate_Destroy(void);
void mock_evaluate_Verify(void);




#define evaluate_IgnoreAndReturn(cmock_retval) evaluate_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void evaluate_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define evaluate_ExpectAndReturn(charbla, cmock_retval) evaluate_CMockExpectAndReturn(__LINE__, charbla, cmock_retval)
void evaluate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, char* charbla, int cmock_to_return);
typedef int (* CMOCK_evaluate_CALLBACK)(char* charbla, int cmock_num_calls);
void evaluate_StubWithCallback(CMOCK_evaluate_CALLBACK Callback);
#define evaluate_ExpectAndThrow(charbla, cmock_to_throw) evaluate_CMockExpectAndThrow(__LINE__, charbla, cmock_to_throw)
void evaluate_CMockExpectAndThrow(UNITY_LINE_TYPE cmock_line, char* charbla, CEXCEPTION_T cmock_to_throw);

#endif
